# @prefix : <http://www.example.org/test#> .
# @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
# @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
# @prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# :Cl_Theatre a rdfs:Class .
# :Cl_Festival a rdfs:Class .
# :Cl_Play a rdfs:Class .
# :Cl_Production a rdfs:Class .
# :Cl_Actor a rdfs:Class .
# :Cl_Role a rdfs:Class .
# :Cl_City a rdfs:Class .
# :Cl_Country a rdfs:Class .
# :Cl_Review a rdfs:Class .
# :Cl_Newspaper a rdfs:Class .

# :Cl_Theatre rdfs:subClassOf :Cl_City .
# :Cl_Festival rdfs:subClassOf :Cl_City .
# :Cl_Production rdfs:subClassOf :Cl_Theatre .
# :Cl_Actor rdfs:subClassOf :Cl_Production .
# :Cl_Role rdfs:subClassOf :Cl_Actor .
# :Cl_City rdfs:subClassOf :Cl_Country .
# :Cl_Review rdfs:subClassOf :Cl_Newspaper .

# :hasTheatre a rdf:Property ; rdfs:domain :Cl_City ; rdfs:range :Cl_Theatre .
# :hasFestival a rdf:Property ; rdfs:domain :Cl_City ; rdfs:range :Cl_Festival .
# :hasProduction a rdf:Property ; rdfs:domain :Cl_Theatre ; rdfs:range :Cl_Production .
# :hasActor a rdf:Property ; rdfs:domain :Cl_Production ; rdfs:range :Cl_Actor .
# :hasRole a rdf:Property ; rdfs:domain :Cl_Actor ; rdfs:range :Cl_Role .
# :isLocatedIn a rdf:Property ; rdfs:domain :Cl_City ; rdfs:range :Cl_Country .
# :hasReview a rdf:Property ; rdfs:domain :Cl_Production ; rdfs:range :Cl_Review .
# :isReviewedBy a rdf:Property ; rdfs:domain :Cl_Review ; rdfs:range :Cl_Newspaper .

# :hasTheatre rdfs:subPropertyOf :isLocatedIn .
# :hasFestival rdfs:subPropertyOf :isLocatedIn .
# :hasProduction rdfs:subPropertyOf :hasTheatre .
# :hasActor rdfs:subPropertyOf :hasProduction .
# :hasRole rdfs:subPropertyOf :hasActor .
# :hasReview rdfs:subPropertyOf :hasProduction .
# :isReviewedBy rdfs:subPropertyOf :hasReview .

# :hasTheatre a rdf:Property ; rdfs:domain :Cl_City ; rdfs:range :Cl_Theatre ; rdf:type owl:FunctionalProperty .
# :hasFestival a rdf:Property ; rdfs:domain :Cl_City ; rdfs:range :Cl_Festival ; rdf:type owl:FunctionalProperty .
# :hasProduction a rdf:Property ; rdfs:domain :Cl_Theatre ; rdfs:range :Cl_Production ; rdf:type owl:FunctionalProperty .
# :hasActor a rdf:Property ; rdfs:domain :Cl_Production ; rdfs:range :Cl_Actor ; rdf:type owl:FunctionalProperty .
# :hasRole a rdf:Property ; rdfs:domain :Cl_Actor ; rdfs:range :Cl_Role ; rdf:type owl:FunctionalProperty .
# :isLocatedIn a rdf:Property ; rdfs:domain :Cl_City ; rdfs:range :Cl_Country ; rdf:type owl:FunctionalProperty .
# :hasReview a rdf:Property ; rdfs:domain :Cl_Production ; rdfs:range :Cl_Review ; rdf:type owl:FunctionalProperty .
# :isReviewedBy a rdf:Property ; rdfs:domain :Cl_Review ; rdfs:range :Cl_Newspaper ; rdf:type owl:FunctionalProperty .

# :Cl_Production a rdfs:Class ;
#   rdfs:subClassOf [
#     a owl:Restriction ;
#     owl:onProperty :hasReview ;
#     owl:cardinality "1"^^xsd:nonNegativeInteger
#   ] .
# **********************
@prefix : <http://www.example.org/test#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

:Cl_Theatre a rdfs:Class .
:Cl_Festival a rdfs:Class .
:Cl_Play a rdfs:Class .
:Cl_Production a rdfs:Class .
:Cl_Actor a rdfs:Class .
:Cl_Role a rdfs:Class .
:Cl_City a rdfs:Class .
:Cl_Country a rdfs:Class .
:Cl_Review a rdfs:Class .
:Cl_Newspaper a rdfs:Class .

:Cl_Theatre rdfs:subClassOf :Cl_City .
:Cl_Festival rdfs:subClassOf :Cl_City .
:Cl_Production rdfs:subClassOf :Cl_Theatre .
:Cl_Play rdfs:subClassOf :Cl_Production .
:Cl_Actor rdfs:subClassOf :Cl_Production .
:Cl_Role rdfs:subClassOf :Cl_Actor .
:Cl_Review rdfs:subClassOf :Cl_Newspaper .
:Cl_City rdfs:subClassOf :Cl_Country .

:hasTheatre a rdf:Property ; rdfs:domain :Cl_City ; rdfs:range :Cl_Theatre .
:hasFestival a rdf:Property ; rdfs:domain :Cl_City ; rdfs:range :Cl_Festival .
:hasProduction a rdf:Property ; rdfs:domain :Cl_Theatre ; rdfs:range :Cl_Production .
:hasPlay a rdf:Property ; rdfs:domain :Cl_Production ; rdfs:range :Cl_Play .
:hasActor a rdf:Property ; rdfs:domain :Cl_Production ; rdfs:range :Cl_Actor .
:hasRole a rdf:Property ; rdfs:domain :Cl_Actor ; rdfs:range :Cl_Role .
:hasReview a rdf:Property ; rdfs:domain :Cl_Newspaper ; rdfs:range :Cl_Review .
:locatedIn a rdf:Property ; rdfs:domain :Cl_City ; rdfs:range :Cl_Country .

:hasPremier a rdf:Property ; rdfs:domain :Cl_Production ; rdfs:range xsd:date .
:hasStarRating a rdf:Property ; rdfs:domain :Cl_Review ; rdfs:range xsd:integer .
:hasEmploymentStart a rdf:Property ; rdfs:domain :Cl_Actor ; rdfs:range xsd:date .
:hasRoleInProduction a rdf:Property ; rdfs:domain :Cl_Actor ; rdfs:range :Cl_Production .
:hasAuthor a rdf:Property ; rdfs:domain :Cl_Play ; rdfs:range xsd:string .
:hasActCount a rdf:Property ; rdfs:domain :Cl_Play ; rdfs:range xsd:integer .
:hasWritingPeriod a rdf:Property ; rdfs:domain :Cl_Play ; rdfs:range xsd:string .

:Cl_Production rdfs:subClassOf [
  rdf:type owl:Restriction ;
  owl:onProperty :hasPremier ;
  owl:cardinality "1"^^xsd:nonNegativeInteger
] .

:Cl_Ensemble a rdfs:Class .
:Cl_Ensemble rdfs:subClassOf :Cl_Production .
:hasEnsemble a rdf:Property ; rdfs:domain :Cl_Production ; rdfs:range :Cl_Ensemble .
:hasMember a rdf:Property ; rdfs:domain :Cl_Ensemble ; rdfs:range :Cl_Actor .
# **********************
# @prefix : <http://www.example.org/test#> .
# @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
# @prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
# @prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# :Cl_Theatre a rdfs:Class .
# :Cl_Festival a rdfs:Class .
# :Cl_Play a rdfs:Class .
# :Cl_Production a rdfs:Class .
# :Cl_Actor a rdfs:Class .
# :Cl_Role a rdfs:Class .
# :Cl_City a rdfs:Class .
# :Cl_Country a rdfs:Class .
# :Cl_Review a rdfs:Class .

# :Cl_TheatreFestival a rdfs:Class ;
#     rdfs:subClassOf :Cl_Festival .
# :Cl_TheatreProduction a rdfs:Class ;
#     rdfs:subClassOf :Cl_Production .
# :Cl_TheatrePlay a rdfs:Class ;
#     rdfs:subClassOf :Cl_Play .
# :Cl_TheatreActor a rdfs:Class ;
#     rdfs:subClassOf :Cl_Actor .
# :Cl_TheatreRole a rdfs:Class ;
#     rdfs:subClassOf :Cl_Role .
# :Cl_TheatreReview a rdfs:Class ;
#     rdfs:subClassOf :Cl_Review .

# :hasTheatre a rdf:Property ;
#     rdfs:domain :Cl_City ;
#     rdfs:range :Cl_Theatre .
# :hasFestival a rdf:Property ;
#     rdfs:domain :Cl_City ;
#     rdfs:range :Cl_TheatreFestival .
# :hasPlay a rdf:Property ;
#     rdfs:domain :Cl_TheatreFestival ;
#     rdfs:range :Cl_TheatrePlay .
# :hasProduction a rdf:Property ;
#     rdfs:domain :Cl_Theatre ;
#     rdfs:range :Cl_TheatreProduction .
# :hasActor a rdf:Property ;
#     rdfs:domain :Cl_TheatreProduction ;
#     rdfs:range :Cl_TheatreActor .
# :hasRole a rdf:Property ;
#     rdfs:domain :Cl_TheatreActor ;
#     rdfs:range :Cl_TheatreRole .
# :hasReview a rdf:Property ;
#     rdfs:domain :Cl_TheatreProduction ;
#     rdfs:range :Cl_TheatreReview .

# :isLocatedIn a rdf:Property ;
#     rdfs:domain :Cl_Theatre ;
#     rdfs:range :Cl_City .
# :isInCountry a rdf:Property ;
#     rdfs:domain :Cl_City ;
#     rdfs:range :Cl_Country .
# :isWrittenBy a rdf:Property ;
#     rdfs:domain :Cl_TheatrePlay ;
#     rdfs:range :Cl_Author .
# :hasPremier a rdf:Property ;
#     rdfs:domain :Cl_TheatreProduction ;
#     rdfs:range xsd:date .
# :hasStarRating a rdf:Property ;
#     rdfs:domain :Cl_TheatreReview ;
#     rdfs:range xsd:integer .
# :hasEmploymentStart a rdf:Property ;
#     rdfs:domain :Cl_TheatreActor ;
#     rdfs:range xsd:date .

    # The best plan for this story and its requirements is Plan 2: Top-Down Plan. This plan starts by defining a superclass for all entities in the story, which is a good approach for this story as it involves a variety of entities such as Theatre, Festival, Play, Production, Actor, etc. The plan then proceeds to create subclasses for this superclass based on the different types of entities mentioned in the story. This approach allows for a clear and organized structure of the ontology. The plan also includes defining object and data properties to establish relationships and capture specific attributes of these classes, which is crucial for answering the competency questions. Finally, the plan applies restrictions as per the requirements mentioned in the story, ensuring that the ontology accurately represents the story's constraints.
